version: '3.3'

services:
  traefik:
    image: traefik:latest
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    deploy:
      placement:
        constraints:
          - node.labels.traefik-public.traefik-public-certificates == true
      labels:
        - traefik.enable=true
        - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN?Variable not set}`)"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik.tls.certresolver=leresolver"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.middlewares=authtraefik"
        # Change the auth password here
        - "traefik.http.middlewares.authtraefik.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}" # user/password
        # global redirect to https
        - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.http-catchall.entrypoints=web"
        - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
        # middleware redirect
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /docker/traefik/certificates:/certificates
      - /docker/traefik/config/traefik.yml:/etc/traefik/traefik.yml
      - /docker/traefik/config/config.yml:/config.yml
    command:
      - --log.level=INFO
      # - --accesslog=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --providers.docker.network=traefik-public
      - --api
      - --api.dashboard=true
      - --api.insecure=true
      - --certificatesresolvers.leresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      # If you wanr ro test first then comment above and uncomment below
      # - --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email=${EMAIL?Variable not set}
      - --certificatesresolvers.leresolver.acme.storage=/certificates/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
    networks:
      - traefik-public
  # If you want to test whoami app remove the hashmark below
  #my-app:
  #  image: containous/whoami:latest
  #  networks:
  #    - traefik-public
  #  command:
  #    - --port=8082 # Our service listens on 8082
  #  deploy:
  #    placement:
  #      constraints:
  #        - node.labels.traefik-public.traefik-public-certificates == true
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.http.routers.my-app.rule=Host(`${WHOAMI_DOMAIN?Variable not set}`)"
  #      - "traefik.http.services.my-app.loadbalancer.server.port=8082"
  #      - "traefik.http.routers.my-app.middlewares=auth"
  #      - "traefik.http.routers.my-app.entrypoints=websecure"
  #      - "traefik.http.routers.my-app.tls=true"
  #      - "traefik.http.routers.my-app.tls.certresolver=leresolver"
  #      - "traefik.http.middlewares.auth.basicauth.users=admin:${HASHED_PASSWORD}" # user/password
networks:
  traefik-public:
    external: true
