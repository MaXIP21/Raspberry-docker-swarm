---
version: '3.7'
services:

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    environment:
      - "GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER}"
      - "GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PW}"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == ${NODENAME}
    volumes:
      - /docker/monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - /docker/monitoring/grafana/provisioning/:/etc/grafana/provisioning
      - /docker/monitoring/grafana/dashboards/:/var/lib/grafana/dashboards
    networks:
      - consul-bridge
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: ${USER_UID}
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == ${NODENAME}
    volumes:
      - /docker/monitoring/prometheus/rules.d:/etc/prometheus/rules.d
      - /docker/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /docker/prometheus_data:/prometheus/data
    networks:
      - consul-bridge
    ports:
      - 9090:9090
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  
  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - 9093:9093
    volumes:
      - /docker/monitoring/alertmanager/:/etc/alertmanager/
    restart: always
    command:
      --config.file=/etc/alertmanager/alertmanager.yml
      --storage.path=/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == ${NODENAME}
    networks:
      - consul-bridge
  karma:
    image: ghcr.io/prymitive/karma:latest
    ports:
      - 8090:8080
    environment:
      - CONFIG_FILE=/config.yml
    volumes:
      - /docker/monitoring/karma/config.yml:/config.yml
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == ${NODENAME}
            labels:
          - traefik.enable=true
          - traefik.docker.network=traefik-public
          - traefik.constraint-label=traefik-public
          - traefik.http.routers.karma-http.rule=Host(`${DOMAIN?Variable not set}`)
          - traefik.http.routers.karma-http.entrypoints=web
          - traefik.http.routers.karma-http.middlewares=redirect-to-https
          - traefik.http.routers.karma-https.rule=Host(`${DOMAIN?Variable not set}`)
          - traefik.http.routers.karma-https.entrypoints=websecure
          - traefik.http.routers.karma-https.tls=true
          - traefik.http.routers.karma-https.tls.certresolver=leresolver
          - traefik.http.services.karma.loadbalancer.server.port=9000
    networks:
      - consul-bridge
      
networks:
  consul-bridge:
    external: true

